#!/bin/bash

#PBS -l nodes=1:ppn=1
#PBS -l walltime=00:55:00


# functions

str_index() {    
                
                ############# ############# ############# ############# ############# ############# 
                ############     find the first index of the substring in a string      ########### 
                ############# ############# ############# ############# ############# #############   

			if [ $# -lt 2 ]; then							# usage dello script							
			    echo $0: "usage: str_index <string> <substrin> "
			    return 1;		    
			fi       

                x="${1%%$2*}";   
                [[ $x = $1 ]] && echo -1 || echo ${#x}; 
            };


remove_extx () {
	
			local result=$( echo ` basename $1 | cut -d '.' -f 1 ` )
			
			local idx=$( str_index ${result} '.' )
			
			if [ ${idx} -ne -1 ]; then
				
				local extension="${result##*.}"		
				
				if [ "${extension}" == "nii" ]; then
					local result=$( echo ` basename $result | cut -d '.' -f 1 ` )	
				fi 
			fi
			
			echo ${result}
				
				}


#parse config.json for input parameters 

t1=$(jq -r .t1 config.json)
affine=$(jq -r .affine config.json)
mask=$(jq -r .mask config.json)

echo "t1: "${t1}
echo "affine: "${affine}
echo "mask: "${mask}

if ( [ -z "${affine}" ]  || [  "${affine}" == "null" ] ); then

	echo "No affine matrix provided. Reorientation to the  MNI152 space will be performed by rigid registration to MNI152 T1-w template..."
	
else

	affine_opt=" --affine ${affine}"

fi

if ( [ -z "${mask}" ]  || [  "${mask}" == "null" ] ); then

	echo "No brain mask provided for bias field correction.."

else

	mask_opt=" --mask ${mask} "
	outputdir_3=${PWD}"/mask_reoriented"
	mkdir -p ${outputdir_3}
	
fi

outputdir_0=${PWD}"/outputdir"
outputdir_1=${PWD}"/T1_reoriented"
outputdir_2=${PWD}"/T1_reoriented_N4"


template='./data/MNI152_T1_1mm.nii.gz'
echo "bash T1Wbasicpreproc.sh -i $t1 -t ${template} ${affine_opt}  ${mask_opt} --outputdir ${outputdir_0}"
singularity exec -e docker://brainlife/ants:2.2.0.1 bash T1Wbasicpreproc.sh -i $t1 -t ${template} ${affine_opt}  ${mask_opt} --outputdir ${outputdir_0}

# save outputfile 

mkdir -p ${outputdir_1}
mkdir -p ${outputdir_2}


prefix=$( remove_extx $( basename ${t1} ) )

cp ${outputdir_0}'/'${prefix}"_reoriented.nii.gz"	${outputdir_1}'/t1.nii.gz'
cp ${outputdir_0}'/'${prefix}"_reoriented_N4.nii.gz"	${outputdir_2}'/t1.nii.gz'
( [ -z "${mask}" ]  || [  "${mask}" == "null" ] ) || {  prefix=$( remove_extx $( basename ${mask} ) ); cp ${outputdir_0}'/'${prefix}'_reoriented.nii.gz' ${outputdir_3}; }
